# HTTP server block to redirect traffic to HTTPS
server {
    listen 80;
    server_name se-europe-test.pl www.se-europe-test.pl;

    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS server block
server {
    listen 443 ssl;
    server_name se-europe-test.pl www.se-europe-test.pl;

    ssl_certificate /etc/letsencrypt/live/se-europe-test.pl/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/se-europe-test.pl/privkey.pem;

    # API proxying to the backend
    location /api {
        proxy_pass http://backend:8000;  # Change to your backend service name and port
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /bundles {
        proxy_pass http://backend:8000/bundles;  # Ensure this points to the correct asset path in your backend
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxying /media requests to the backend
    location /media {
        proxy_pass http://seeurope-backend-1:8000/media;  # Proxy to your backend's /media directory
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }


    # Frontend proxying
    location / {
        proxy_pass http://frontend:3000;  # Assuming your frontend is running on port 3000
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
